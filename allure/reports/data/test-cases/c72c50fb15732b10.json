{"uid":"c72c50fb15732b10","name":"should not delete brand with selected and existing id while logged in as normal user ","fullName":"API.test.Details.BrandSpec.should not delete brand with selected and existing id while logged in as normal user ","historyId":"3b86e8850e419703ad9c9b79b46274c8","time":{"start":1701970705716,"stop":1701970706313,"duration":597},"description":"Test Description: should not delete brand with selected and existing id while logged in as normal user ","descriptionHtml":"<p>Test Description: should not delete brand with selected and existing id while logged in as normal user</p>\n","status":"failed","statusMessage":"1 expectation failed.\nExpected status code <200> but was <401>.\n","statusTrace":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <200> but was <401>.\n\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:127)\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\n\tat API.utils.UserAuthenticatorUtils.getAnyUserAuthResponse(UserAuthenticatorUtils.groovy:75)\n\tat API.utils.UserAuthenticatorUtils.getAuthorizationHeaderForAnyUser(UserAuthenticatorUtils.groovy:29)\n\tat API.test.Details.BrandSpec.should not delete brand with selected and existing id while logged in as normal user (BrandSpec.groovy:168)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"Test Description: should not delete brand with selected and existing id while logged in as normal user ","status":"failed","statusMessage":"1 expectation failed.\nExpected status code <200> but was <401>.\n","statusTrace":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <200> but was <401>.\n\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:127)\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\n\tat API.utils.UserAuthenticatorUtils.getAnyUserAuthResponse(UserAuthenticatorUtils.groovy:75)\n\tat API.utils.UserAuthenticatorUtils.getAuthorizationHeaderForAnyUser(UserAuthenticatorUtils.groovy:29)\n\tat API.test.Details.BrandSpec.should not delete brand with selected and existing id while logged in as normal user (BrandSpec.groovy:168)\n","steps":[{"name":"{\n    \"name\": \"3c72ece4-ffd8-48a7-b3c8-c3fc734671ef\",\n    \"slug\": \"9a78b217-737c-41dc-8186-762b0cc67966\",\n    \"id\": \"01hh2nqzmeaamavysszw56xrcq\"\n}","time":{"start":1701970706004,"stop":1701970706004,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[{"uid":"6f1b07a3ce7e09b1","name":"Request","source":"6f1b07a3ce7e09b1.html","type":"text/html","size":730},{"uid":"f63bb719d5a4a873","name":"HTTP/1.1 201 Created","source":"f63bb719d5a4a873.html","type":"text/html","size":800}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false,"stepsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"package","value":"API.test.Details"},{"name":"testClass","value":"API.test.Details.BrandSpec"},{"name":"testMethod","value":"should not delete brand with selected and existing id while logged in as normal user "},{"name":"suite","value":"BrandSpec"},{"name":"host","value":"Patryks-MBP.mshome.net"},{"name":"thread","value":"89457@Patryks-MBP.mshome.net.main(1)"},{"name":"framework","value":"spock"},{"name":"language","value":"java"},{"name":"epic","value":"REST API Tests"},{"name":"story","value":"Verify CRUID Operations on Details module"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c72c50fb15732b10.json","parameterValues":[]}